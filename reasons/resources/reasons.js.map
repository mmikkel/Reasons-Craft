{"version":3,"sources":["webpack:///reasons.js","webpack:///webpack/bootstrap b5ad3f4b1e286b738074","webpack:///./src/main.js","webpack:///./src/reasons.js","webpack:///external \"Craft\"","webpack:///./src/styles/reasons.scss?8791","webpack:///./src/styles/reasons.scss","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/lib/jquery-extensions.js","webpack:///external \"jQuery\"","webpack:///./src/core/constants.js","webpack:///./src/modules/FieldLayoutDesigner.js","webpack:///./src/modules/Builder.js","webpack:///./src/modules/BuilderModal.js","webpack:///./src/modules/MatrixConfigurator.js","webpack:///./src/modules/FormParser.js","webpack:///./src/modules/MatrixParser.js","webpack:///./src/core/settings.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_reasons","_reasons2","Craft","ReasonsPlugin","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_craft","_craft2","_constants","constants","_FieldLayoutDesigner","_FieldLayoutDesigner2","_MatrixConfigurator","_MatrixConfigurator2","_FormParser","_FormParser2","_MatrixParser","Reasons","this","data","classes","FieldLayoutDesigner","MatrixConfigurator","className","reasonsClass","craftClass","$","initParser","bind","console","info","destroyParser","formAttributes","getFormAttributes","context","PARSER_CONTEXT","conditionals","parser","$form","destroy","attributes","type","toggleFields","fieldId","parseInt","getToggleFields","numToggleFields","fieldIds","fieldHandle","getFieldIds","toggleFieldTypes","cp","$primaryForm","namespace","find","val","action","idInputSelector","ASSET_SOURCE_ACTION","ASSET_SOURCE_HANDLE","CATEGORY_ACTION","CATEGORY_GROUP_ACTION","CATEGORY_GROUP_HANDLE","GLOBAL_SET_CONTENT_ACTION","GLOBAL_SET_ACTION","GLOBAL_SET_HANDLE","ENTRY_ACTION","$entryType","ENTRY_TYPE_HANDLE","SECTION_HANDLE","ENTRY_TYPE_ACTION","TAG_ACTION","TAG_GROUP_ACTION","TAG_GROUP_HANDLE","USERS_ACTION","USERS_FIELDS_ACTION","USERS_HANDLE","FIELDS_ACTION","FIELDS_HANDLE","SOLSPACE_CALENDAR_SETTINGS_ACTION","SOLSPACE_CALENDAR_EVENTS_ACTION","SOLSPACE_CALENDAR_HANDLE","COMMERCE_PRODUCT_TYPE_ACTION","COMMERCE_PRODUCT_ACTION","COMMERCE_PRODUCT_TYPE_HANDLE","attrs","getFormContext","conditionalsContext","getConditionalContextFromAttributes","getConditionals","FORM_PARSER_CONTEXT","FIELD_LAYOUT_DESIGNER_CONTEXT","content","locals","push","list","toString","result","item","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","_jquery","_jquery2","jQuery","hasAttr","name","l","undefined","attr","MATRIX_CONFIGURATOR_CONTEXT","MATRIX_PARSER_CONTEXT","_Builder","_Builder2","_BuilderModal","_BuilderModal2","fldClass","fnFieldDrag","FieldDrag","self","fnInit","init","fnInitField","initField","$field","menu","$remove","$container","parent","$toggle","t","on","onReasonsToggleOptionSelect","fnRemoveFieldById","removeFieldById","$allFields","fnFieldDragOnDragStop","onDragStop","fld","$input","appendTo","setConditionals","onHide","onBuilderModalHide","$tab","$fieldsInTab","toggleFieldsInTab","toggleField","$tabContainer","children","each","getToggleFieldById","rules","addClass","removeClass","keys","modal","e","preventDefault","stopPropagation","option","currentTarget","$anchor","hide","toggleModal","Builder","settings","setSettings","templates","builderUi","$ui","$rule","clone","$statement","$message","onAddRuleBtnClick","onRemoveRuleBtnClick","onAddStatementBtnClick","onRuleToggleFieldChange","onRuleCompareChange","onRuleValueChange","html","setToggleFields","addStatement","render","extend","off","toggleFieldIds","toggleFieldsByIds","toggleFieldSelectOptions","toggleSelectOption","disable","text","enable","statement","$rules","$toggleSelect","toggleSelectValue","toggleSelectOpts","$statements","compare","onChange","append","addRule","$target","trigger","parents","$ruleValue","toggleFieldId","toggleFieldType","toggleFieldSettings","ruleValueContent","log","select","true","false","values","label","number","numStars","charAt","toUpperCase","slice","null","notnull","input","isMultiSelect","selectOptions","selected","min","max","initialRows","placeholder","multiline","BuilderModal","builder","$el","template","$builder","get","Garnish","Modal","resizable","matrixClass","configurator","blockTypes","initBlockType","blockType","$item","fields","field","getToggleFieldsForField","getConditionalsForField","onConditionalsBuilderChange","$fieldSettingsContainer","before","prepend","getToggleFieldTypes","siblingField","selectedFieldType","getToggleFieldDataFromField","fieldType","handle","$handleInput","$nameInput","contentAttribute","getToggleFieldSettingsFromField","FormParser","MatrixParser","OPTION_BASED_FIELDTYPES"],"mappings":"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","file":"reasons.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _reasons = __webpack_require__(1);\n\t\n\tvar _reasons2 = _interopRequireDefault(_reasons);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tCraft.ReasonsPlugin = new _reasons2.default();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _craft = __webpack_require__(2);\n\t\n\tvar _craft2 = _interopRequireDefault(_craft);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(7);\n\t\n\tvar _constants = __webpack_require__(9);\n\t\n\tvar constants = _interopRequireWildcard(_constants);\n\t\n\tvar _FieldLayoutDesigner = __webpack_require__(10);\n\t\n\tvar _FieldLayoutDesigner2 = _interopRequireDefault(_FieldLayoutDesigner);\n\t\n\tvar _MatrixConfigurator = __webpack_require__(13);\n\t\n\tvar _MatrixConfigurator2 = _interopRequireDefault(_MatrixConfigurator);\n\t\n\tvar _FormParser = __webpack_require__(15);\n\t\n\tvar _FormParser2 = _interopRequireDefault(_FormParser);\n\t\n\tvar _MatrixParser = __webpack_require__(16);\n\t\n\tvar _MatrixParser2 = _interopRequireDefault(_MatrixParser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Reasons = function () {\n\t    function Reasons() {\n\t        _classCallCheck(this, Reasons);\n\t    }\n\t\n\t    _createClass(Reasons, [{\n\t        key: 'init',\n\t        value: function init(data) {\n\t\n\t            Reasons.data = data;\n\t\n\t            var classes = { FieldLayoutDesigner: _FieldLayoutDesigner2.default, MatrixConfigurator: _MatrixConfigurator2.default };\n\t            for (var className in classes) {\n\t                var reasonsClass = classes[className];\n\t                var craftClass = _craft2.default[className] || null;\n\t                if (!craftClass) continue;\n\t                new reasonsClass(craftClass);\n\t            }\n\t\n\t            $(this.initParser.bind(this));\n\t\n\t            console.info('Reasons init', Reasons.data);\n\t        }\n\t\n\t        /*\n\t        * Initializes the primary parser on the page\n\t        *\n\t        */\n\t\n\t    }, {\n\t        key: 'initParser',\n\t        value: function initParser() {\n\t\n\t            this.destroyParser();\n\t\n\t            var formAttributes = Reasons.getFormAttributes();\n\t\n\t            if (formAttributes.context !== constants.PARSER_CONTEXT) return false;\n\t\n\t            if (formAttributes.conditionals) {\n\t                this.parser = new _FormParser2.default($form, formAttributes.conditionals);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroyParser',\n\t        value: function destroyParser() {\n\t            if (this.parser) {\n\t                this.parser.destroy();\n\t                delete this.parser;\n\t            }\n\t        }\n\t\n\t        /*\n\t        *   Core methods\n\t        *\n\t        */\n\t\n\t    }], [{\n\t        key: 'getConditionals',\n\t        value: function getConditionals(context) {\n\t            return context ? Reasons.data.conditionals && Reasons.data.conditionals.hasOwnProperty(context) ? Reasons.data.conditionals[context] : null : Reasons.data.conditionals || {};\n\t        }\n\t    }, {\n\t        key: 'getConditionalContextFromAttributes',\n\t        value: function getConditionalContextFromAttributes(attributes) {\n\t            return attributes.type + (attributes.id ? ':' + attributes.id : '');\n\t        }\n\t    }, {\n\t        key: 'getToggleFields',\n\t        value: function getToggleFields() {\n\t            return Reasons.data.toggleFields ? Reasons.data.toggleFields : [];\n\t        }\n\t    }, {\n\t        key: 'getToggleFieldById',\n\t        value: function getToggleFieldById(fieldId) {\n\t            fieldId = parseInt(fieldId);\n\t            var toggleFields = Reasons.getToggleFields();\n\t            var numToggleFields = toggleFields.length;\n\t            for (var i = 0; i < numToggleFields; ++i) {\n\t                if (parseInt(toggleFields[i].id) === fieldId) {\n\t                    return toggleFields[i];\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'getFieldIds',\n\t        value: function getFieldIds() {\n\t            return Reasons.data.fieldIds ? Reasons.data.fieldIds : {};\n\t        }\n\t    }, {\n\t        key: 'getFieldIdByHandle',\n\t        value: function getFieldIdByHandle(fieldHandle) {\n\t            var fieldIds = Reasons.getFieldIds();\n\t            return fieldIds && fieldIds.hasOwnProperty(fieldHandle) ? fieldIds[fieldHandle] : false;\n\t        }\n\t    }, {\n\t        key: 'getToggleFieldTypes',\n\t        value: function getToggleFieldTypes() {\n\t            return Reasons.data.toggleFieldTypes ? Reasons.data.toggleFieldTypes : [];\n\t        }\n\t    }, {\n\t        key: 'getFormAttributes',\n\t        value: function getFormAttributes($form) {\n\t\n\t            if (!$form) {\n\t                $form = _craft2.default.cp.$primaryForm && _craft2.default.cp.$primaryForm.length ? _craft2.default.cp.$primaryForm : $('#content form:first');\n\t                if (!$form || !$form.length) return false;\n\t            }\n\t\n\t            if ($form.data('elementEditor')) {\n\t                return false;\n\t            }\n\t\n\t            // Get namespace\n\t            var namespace = $form.find('input[type=\"hidden\"][name=\"namespace\"]').val();\n\t            if (namespace) {\n\t                namespace += '-';\n\t            }\n\t\n\t            var action = $form.find('input[type=\"hidden\"][name=\"action\"]').val();\n\t            var type = void 0;\n\t            var idInputSelector = void 0;\n\t\n\t            switch (action) {\n\t\n\t                case constants.ASSET_SOURCE_ACTION:\n\t                    type = constants.ASSET_SOURCE_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"sourceId\"]';\n\t                    break;\n\t\n\t                case constants.CATEGORY_ACTION:\n\t                case constants.CATEGORY_GROUP_ACTION:\n\t                    type = constants.CATEGORY_GROUP_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"groupId\"]';\n\t                    break;\n\t\n\t                case constants.GLOBAL_SET_CONTENT_ACTION:\n\t                case constants.GLOBAL_SET_ACTION:\n\t                    type = constants.GLOBAL_SET_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"setId\"]';\n\t                    break;\n\t\n\t                case constants.ENTRY_ACTION:\n\t                    var $entryType = $form.find('select#entryType, input[type=\"hidden\"][name=\"entryTypeId\"], input[type=\"hidden\"][name=\"typeId\"], #' + namespace + 'entryType');\n\t                    type = $entryType.length ? constants.ENTRY_TYPE_HANDLE : constants.SECTION_HANDLE;\n\t                    idInputSelector = $entryType.length ? 'select#entryType, input[type=\"hidden\"][name=\"entryTypeId\"], input[type=\"hidden\"][name=\"typeId\"], #' + namespace + 'entryType' : 'input[type=\"hidden\"][name=\"sectionId\"], #' + namespace + 'section';\n\t                    break;\n\t\n\t                case constants.ENTRY_TYPE_ACTION:\n\t                    type = constants.ENTRY_TYPE_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"entryTypeId\"]';\n\t                    break;\n\t\n\t                case constants.TAG_ACTION:\n\t                case constants.TAG_GROUP_ACTION:\n\t                    type = constants.TAG_GROUP_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"tagGroupId\"], input[type=\"hidden\"][name=\"groupId\"]';\n\t                    break;\n\t\n\t                case constants.USERS_ACTION:\n\t                case constants.USERS_FIELDS_ACTION:\n\t                    type = constants.USERS_HANDLE;\n\t                    break;\n\t\n\t                case constants.FIELDS_ACTION:\n\t                    type = constants.FIELDS_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"fieldId\"]';\n\t                    break;\n\t\n\t                case constants.SOLSPACE_CALENDAR_SETTINGS_ACTION:\n\t                case constants.SOLSPACE_CALENDAR_EVENTS_ACTION:\n\t                    type = constants.SOLSPACE_CALENDAR_HANDLE;\n\t                    break;\n\t\n\t                case constants.COMMERCE_PRODUCT_TYPE_ACTION:\n\t                case constants.COMMERCE_PRODUCT_ACTION:\n\t                    type = constants.COMMERCE_PRODUCT_TYPE_HANDLE;\n\t                    idInputSelector = 'input[type=\"hidden\"][name=\"typeId\"]';\n\t                    break;\n\t\n\t            }\n\t\n\t            if (!type) {\n\t                return false;\n\t            }\n\t\n\t            var attrs = {\n\t                type: type,\n\t                context: Reasons.getFormContext($form),\n\t                id: idInputSelector ? $form.find(idInputSelector).val() | 0 : false\n\t            };\n\t\n\t            var conditionalsContext = Reasons.getConditionalContextFromAttributes(attrs);\n\t            attrs['conditionals'] = Reasons.getConditionals(conditionalsContext);\n\t\n\t            return attrs;\n\t        }\n\t    }, {\n\t        key: 'getFormContext',\n\t        value: function getFormContext($form) {\n\t\n\t            if ($form.data('elementEditor')) {\n\t                return false;\n\t            }\n\t\n\t            var action = $form.find('input[type=\"hidden\"][name=\"action\"]').val();\n\t\n\t            switch (action) {\n\t\n\t                case constants.GLOBAL_SET_CONTENT_ACTION:\n\t                case constants.ENTRY_ACTION:\n\t                case constants.TAG_ACTION:\n\t                case constants.CATEGORY_ACTION:\n\t                case constants.USERS_ACTION:\n\t                case constants.SOLSPACE_CALENDAR_EVENTS_ACTION:\n\t                case constants.COMMERCE_PRODUCT_ACTION:\n\t                    return constants.FORM_PARSER_CONTEXT;\n\t\n\t                case constants.ASSET_SOURCE_ACTION:\n\t                case constants.CATEGORY_GROUP_ACTION:\n\t                case constants.GLOBAL_SET_ACTION:\n\t                case constants.ENTRY_TYPE_ACTION:\n\t                case constants.TAG_GROUP_ACTION:\n\t                case constants.USERS_FIELDS_ACTION:\n\t                case constants.SOLSPACE_CALENDAR_SETTINGS_ACTION:\n\t                case constants.COMMERCE_PRODUCT_TYPE_ACTION:\n\t                    return constants.FIELD_LAYOUT_DESIGNER_CONTEXT;\n\t\n\t                // case constants.FIELDS_ACTION :\n\t                //     return FIELD_DESIGNER_CONTEXT;\n\t\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return Reasons;\n\t}();\n\t\n\tReasons.data = null;\n\texports.default = Reasons;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Craft;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(4);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(6)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./reasons.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./reasons.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(5)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".field.reasonsHide{height:0!important;visibility:hidden!important;overflow:hidden!important;pointer-events:none!important;margin:0!important;padding:0!important;position:absolute!important}.reasonsModal .body{overflow:auto}.reasonsBuilderUi .heading{margin-bottom:20px;font-weight:700}.reasonsBuilderUi.disabled{opacity:1}.reasonsBuilderUi.disabled .wrapper{display:none}.reasonsMessage{color:#8f98a3}.reasonsBuilder,.reasonsStatement{width:100%;float:left}.reasonsStatement{margin-bottom:20px;padding-bottom:18px;border-bottom:1px solid #ccc;position:relative}.reasonsStatement .delimiter{display:inline-block;position:absolute;left:20px;bottom:-6px;padding:0 6px;background-color:#fff;line-height:1;font-size:10px;font-weight:700;color:#999;text-transform:uppercase}.reasonsRuleParams,.reasonsRuleParams>*{display:inline-block;width:auto;float:left;position:relative;margin:0 10px 10px 0}.reasonsRuleParams{margin:0}.reasonsRule{width:100%;float:left;clear:both;margin-right:0}.reasonsRuleLead{display:block;line-height:1;font-size:12px;color:#999;float:left;clear:both;margin-bottom:8px}.reasonsAddRule,.reasonsRemoveRule{display:inline-block;margin:6px 2px}.reasonsAddRule{display:none;margin-left:5px;margin-top:0;float:left;clear:both}.reasonsRule:last-child .reasonsAddRule{display:inline-block}.reasonsRule:last-child .reasonsRuleLead{display:none}.reasonsAdd{width:100%;float:left}.fld-field.js-reasons-has-conditionals{border-style:dashed}.matrix-configurator .reasonsAdd{display:inline-block;float:none;width:auto;margin-right:10px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _jquery = __webpack_require__(8);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*!\n\t * jQuery.fn.hasAttr()\n\t *\n\t * Copyright 2011, Rick Waldron\n\t * Licensed under MIT license.\n\t *\n\t */\n\t(function (jQuery) {\n\t    jQuery.fn.hasAttr = function (name) {\n\t        for (var i = 0, l = this.length; i < l; i++) {\n\t            if (!!(this.attr(name) !== undefined)) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t})(_jquery2.default);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ASSET_SOURCE_HANDLE = exports.ASSET_SOURCE_HANDLE = 'assetSource';\n\tvar CATEGORY_GROUP_HANDLE = exports.CATEGORY_GROUP_HANDLE = 'categoryGroup';\n\tvar TAG_GROUP_HANDLE = exports.TAG_GROUP_HANDLE = 'tagGroup';\n\tvar GLOBAL_SET_HANDLE = exports.GLOBAL_SET_HANDLE = 'globalSet';\n\tvar ENTRY_TYPE_HANDLE = exports.ENTRY_TYPE_HANDLE = 'entryType';\n\tvar SECTION_HANDLE = exports.SECTION_HANDLE = 'section';\n\tvar USERS_HANDLE = exports.USERS_HANDLE = 'users';\n\tvar FIELDS_HANDLE = exports.FIELDS_HANDLE = 'field';\n\tvar SOLSPACE_CALENDAR_HANDLE = exports.SOLSPACE_CALENDAR_HANDLE = 'solspaceCalendar';\n\t// export const COMMERCE_PRODUCT_TYPE_HANDLE =        'commerceProductType';\n\tvar ASSET_SOURCE_ACTION = exports.ASSET_SOURCE_ACTION = 'assetSources/saveSource';\n\tvar CATEGORY_ACTION = exports.CATEGORY_ACTION = 'categories/saveCategory';\n\tvar CATEGORY_GROUP_ACTION = exports.CATEGORY_GROUP_ACTION = 'categories/saveGroup';\n\tvar TAG_ACTION = exports.TAG_ACTION = 'tagManager/saveTag';\n\tvar TAG_GROUP_ACTION = exports.TAG_GROUP_ACTION = 'tags/saveTagGroup';\n\tvar GLOBAL_SET_CONTENT_ACTION = exports.GLOBAL_SET_CONTENT_ACTION = 'globals/saveContent';\n\tvar GLOBAL_SET_ACTION = exports.GLOBAL_SET_ACTION = 'globals/saveSet';\n\tvar ENTRY_ACTION = exports.ENTRY_ACTION = 'entries/saveEntry';\n\tvar ENTRY_TYPE_ACTION = exports.ENTRY_TYPE_ACTION = 'sections/saveEntryType';\n\tvar USERS_ACTION = exports.USERS_ACTION = 'users/saveUser';\n\tvar USERS_FIELDS_ACTION = exports.USERS_FIELDS_ACTION = 'users/saveFieldLayout';\n\tvar FIELDS_ACTION = exports.FIELDS_ACTION = 'fields/saveField';\n\tvar SOLSPACE_CALENDAR_EVENTS_ACTION = exports.SOLSPACE_CALENDAR_EVENTS_ACTION = 'calendar/events/saveEvent';\n\tvar SOLSPACE_CALENDAR_SETTINGS_ACTION = exports.SOLSPACE_CALENDAR_SETTINGS_ACTION = 'calendar/settings/saveSettings';\n\t// export const COMMERCE_PRODUCT_TYPE_ACTION =       'commerce/productTypes/saveProductType';\n\t// export const COMMERCE_PRODUCT_ACTION =            'commerce/products/saveProduct';\n\t\n\tvar FIELD_LAYOUT_DESIGNER_CONTEXT = exports.FIELD_LAYOUT_DESIGNER_CONTEXT = 'FIELD_LAYOUT_DESIGNER_CONTEXT';\n\tvar MATRIX_CONFIGURATOR_CONTEXT = exports.MATRIX_CONFIGURATOR_CONTEXT = 'MATRIX_CONFIGURATOR_CONTEXT';\n\tvar FORM_PARSER_CONTEXT = exports.FORM_PARSER_CONTEXT = 'FORM_PARSER_CONTEXT';\n\tvar MATRIX_PARSER_CONTEXT = exports.MATRIX_PARSER_CONTEXT = 'MATRIX_PARSER_CONTEXT';\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _reasons = __webpack_require__(1);\n\t\n\tvar _reasons2 = _interopRequireDefault(_reasons);\n\t\n\tvar _Builder = __webpack_require__(11);\n\t\n\tvar _Builder2 = _interopRequireDefault(_Builder);\n\t\n\tvar _BuilderModal = __webpack_require__(12);\n\t\n\tvar _BuilderModal2 = _interopRequireDefault(_BuilderModal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FieldLayoutDesigner = function () {\n\t  function FieldLayoutDesigner(fldClass) {\n\t    _classCallCheck(this, FieldLayoutDesigner);\n\t\n\t    var fn = fldClass.prototype;\n\t    var fnFieldDrag = fldClass.FieldDrag.prototype;\n\t    var self = this;\n\t\n\t    var fnInit = fn.init;\n\t    fn.init = function () {\n\t      fnInit.apply(this, arguments);\n\t      self.init(this);\n\t    };\n\t\n\t    var fnInitField = fn.initField;\n\t    fn.initField = function ($field) {\n\t      fnInitField.apply(this, arguments);\n\t      // Create the \"Edit conditionals\" field settings menu option\n\t      var menu = $field.find('.settings').data('menubtn').menu || null;\n\t      var $remove = menu && menu.$container ? menu.$container.find('a[data-action=\"remove\"]').parent() : null;\n\t      var $toggle = $('<li><a data-action=\"toggle-reasons\">' + Craft.t('Edit conditionals') + '</a></li>');\n\t      if ($remove && $remove.length) {\n\t        $toggle.insertBefore($remove).find('a').data('menu', menu).on('click', self.onReasonsToggleOptionSelect.bind(self));\n\t      }\n\t      self.update();\n\t    };\n\t\n\t    var fnRemoveFieldById = fn.removeFieldById;\n\t    fn.removeFieldById = function (fieldId) {\n\t      var $field = this.$allFields.filter('[data-id=' + fieldId + ']:first');\n\t      if ($field && $field.length && $field.data('_reasonsPlugin')) {\n\t        $field.data('_reasonsPlugin').destroy();\n\t        $field.data('_reasonsPlugin', null);\n\t      }\n\t      fnRemoveFieldById.apply(this, arguments);\n\t      self.update();\n\t    };\n\t\n\t    var fnFieldDragOnDragStop = fnFieldDrag.onDragStop;\n\t    fnFieldDrag.onDragStop = function () {\n\t      fnFieldDragOnDragStop.apply(this, arguments);\n\t      self.update();\n\t    };\n\t  }\n\t\n\t  _createClass(FieldLayoutDesigner, [{\n\t    key: 'init',\n\t    value: function init(fld) {\n\t\n\t      var formAttributes = _reasons2.default.getFormAttributes();\n\t      if (!formAttributes) return false;\n\t\n\t      this.fld = fld;\n\t      this.$input = $('<input type=\"hidden\" name=\"_reasonsPlugin\" value=\"\" />').appendTo(this.fld.$container);\n\t\n\t      this.setConditionals(formAttributes.conditionals);\n\t      this.update();\n\t    }\n\t  }, {\n\t    key: 'toggleModal',\n\t    value: function toggleModal($field) {\n\t\n\t      var self = this;\n\t\n\t      new _BuilderModal2.default($field.data('_reasonsPlugin'), {\n\t        onHide: function onHide() {\n\t          self.onBuilderModalHide(this);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'update',\n\t    value: function update() {\n\t\n\t      if (!this.fld) return false;\n\t\n\t      var self = this;\n\t\n\t      var conditionals = {};\n\t      var $tab = void 0;\n\t      var $field = void 0;\n\t      var $fieldsInTab = void 0;\n\t      var fieldId = void 0;\n\t      var toggleFieldsInTab = void 0;\n\t      var toggleField = void 0;\n\t\n\t      this.fld.$tabContainer.children().each(function () {\n\t\n\t        $tab = $(this);\n\t        $fieldsInTab = $tab.children('.fld-tabcontent').children();\n\t\n\t        toggleFieldsInTab = [];\n\t        $fieldsInTab.each(function () {\n\t          toggleField = _reasons2.default.getToggleFieldById($(this).data('id'));\n\t          if (toggleField) toggleFieldsInTab.push(toggleField);\n\t        });\n\t\n\t        $fieldsInTab.each(function () {\n\t\n\t          $field = $(this);\n\t          fieldId = $field.data('id');\n\t\n\t          if (!$field.data('_reasonsPlugin')) {\n\t            // Create the conditionals builder\n\t            $field.data('_reasonsPlugin', new _Builder2.default({\n\t              fieldId: fieldId,\n\t              toggleFields: toggleFieldsInTab,\n\t              rules: self.getConditionals(fieldId)\n\t            }));\n\t          } else {\n\t            $field.data('_reasonsPlugin').update({\n\t              toggleFields: toggleFieldsInTab\n\t            });\n\t          }\n\t\n\t          // Get rules\n\t          var rules = $field.data('_reasonsPlugin').getConditionals();\n\t          if (rules) {\n\t            conditionals[fieldId] = rules;\n\t            $field.addClass('js-reasons-has-conditionals');\n\t          } else {\n\t            $field.removeClass('js-reasons-has-conditionals');\n\t          }\n\t        });\n\t      });\n\t\n\t      this.setConditionals(conditionals);\n\t    }\n\t  }, {\n\t    key: 'getConditionals',\n\t    value: function getConditionals(fieldId) {\n\t      if (fieldId) {\n\t        return this.conditionals && this.conditionals.hasOwnProperty(fieldId) ? this.conditionals[fieldId] : null;\n\t      }\n\t      return this.conditionals || null;\n\t    }\n\t  }, {\n\t    key: 'setConditionals',\n\t    value: function setConditionals(conditionals) {\n\t      this.conditionals = conditionals;\n\t      if (!this.conditionals || Object.keys(this.conditionals).length === 0) {\n\t        this.$input.attr('value', '');\n\t      } else {\n\t        this.$input.attr('value', JSON.stringify(this.conditionals));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onBuilderModalHide',\n\t    value: function onBuilderModalHide(modal) {\n\t      this.update();\n\t    }\n\t  }, {\n\t    key: 'onReasonsToggleOptionSelect',\n\t    value: function onReasonsToggleOptionSelect(e) {\n\t\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t\n\t      var option = e.currentTarget;\n\t      var menu = $(option).data('menu');\n\t      var $field = menu.$anchor.parent();\n\t\n\t      menu.hide();\n\t\n\t      this.toggleModal($field);\n\t    }\n\t  }]);\n\t\n\t  return FieldLayoutDesigner;\n\t}();\n\t\n\texports.default = FieldLayoutDesigner;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _reasons = __webpack_require__(1);\n\t\n\tvar _reasons2 = _interopRequireDefault(_reasons);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Builder = function () {\n\t    function Builder(settings) {\n\t        _classCallCheck(this, Builder);\n\t\n\t        this.setSettings(settings);\n\t\n\t        this.fieldId = this.settings.fieldId;\n\t\n\t        this.$container = $(Builder.templates.builderUi());\n\t        this.$ui = this.$container.find('.reasonsBuilder:first');\n\t\n\t        // Create rule template\n\t        this.$rule = this.$container.find('.reasonsRule:first').clone(true);\n\t\n\t        // Create statement template\n\t        this.$statement = this.$container.find('.reasonsStatement:first').clone(true);\n\t        this.$statement.find('.reasonsRule').remove();\n\t\n\t        this.$message = this.$container.find('.reasonsMessage:first');\n\t\n\t        // Add some event listeners\n\t        this.$container.on('click', '.reasonsAddRule', this.onAddRuleBtnClick.bind(this)).on('click', '.reasonsRemoveRule', this.onRemoveRuleBtnClick.bind(this)).on('click', '.reasonsAddStatement', this.onAddStatementBtnClick.bind(this)).on('change', '.reasonsRuleToggleField select', this.onRuleToggleFieldChange.bind(this)).on('change', '.reasonsRuleCompare select', this.onRuleCompareChange.bind(this)).on('change', '.reasonsRuleValue *:input', this.onRuleValueChange.bind(this));\n\t\n\t        this.$ui.html('');\n\t\n\t        if (this.settings.toggleFields) {\n\t            this.setToggleFields(this.settings.toggleFields);\n\t        }\n\t\n\t        if (this.settings.rules && this.settings.rules.length > 0) {\n\t            for (var i = 0; i < this.settings.rules.length; ++i) {\n\t                this.addStatement({\n\t                    rules: this.settings.rules[i]\n\t                });\n\t            }\n\t        }\n\t\n\t        this.render();\n\t    }\n\t\n\t    _createClass(Builder, [{\n\t        key: 'setSettings',\n\t        value: function setSettings(settings) {\n\t            this.settings = $.extend({}, this.settings || Builder.settings, settings);\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            this.$container.off('click change');\n\t            delete this.$container;\n\t            delete this.$ui;\n\t            delete this.$statement;\n\t            delete this.$message;\n\t            delete this.settings;\n\t            delete this.fieldId;\n\t        }\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            return this.$container;\n\t        }\n\t    }, {\n\t        key: 'disable',\n\t        value: function disable() {\n\t            this.$container.addClass('disabled');\n\t        }\n\t    }, {\n\t        key: 'enable',\n\t        value: function enable() {\n\t            this.$container.removeClass('disabled');\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(settings) {\n\t            this.setSettings(settings);\n\t            this.setToggleFields(this.settings.toggleFields);\n\t            this.render();\n\t        }\n\t    }, {\n\t        key: 'setToggleFields',\n\t        value: function setToggleFields(toggleFields) {\n\t\n\t            if (!toggleFields) {\n\t                return false;\n\t            }\n\t\n\t            this.settings.toggleFields = [];\n\t            this.settings.toggleFieldIds = [];\n\t            this.settings.toggleFieldsByIds = {};\n\t\n\t            for (var i = 0; i < toggleFields.length; ++i) {\n\t                if (toggleFields[i].id != this.fieldId) {\n\t                    this.settings.toggleFields.push(toggleFields[i]);\n\t                    this.settings.toggleFieldIds.push(toggleFields[i].id);\n\t                    this.settings.toggleFieldsByIds[toggleFields[i].id] = toggleFields[i];\n\t                }\n\t            }\n\t\n\t            // Update rule template\n\t            var toggleFieldSelectOptions = '';\n\t            for (var i = 0; i < this.settings.toggleFields.length; ++i) {\n\t                toggleFieldSelectOptions += Builder.templates.toggleSelectOption(this.settings.toggleFields[i]);\n\t            }\n\t            this.$rule.find('.reasonsRuleToggleField select').html(toggleFieldSelectOptions);\n\t        }\n\t    }, {\n\t        key: 'getToggleFieldById',\n\t        value: function getToggleFieldById(id) {\n\t            return this.settings.toggleFieldsByIds && this.settings.toggleFieldsByIds[id] ? this.settings.toggleFieldsByIds[id] : null;\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t\n\t            this.settings.rules = [];\n\t\n\t            var toggleFields = this.settings.toggleFields || [];\n\t\n\t            if (toggleFields.length === 0) {\n\t                this.disable();\n\t                this.$message.text(Craft.t('No toggle fields available.'));\n\t                return false;\n\t            } else {\n\t                this.enable();\n\t                this.$message.text('');\n\t            }\n\t\n\t            var self = this,\n\t                statement,\n\t                $statements = this.$container.find('.reasonsStatement'),\n\t                $statement,\n\t                $rules,\n\t                $rule,\n\t                $toggleSelect,\n\t                toggleSelectValue,\n\t                toggleSelectOpts;\n\t\n\t            $statements.each(function () {\n\t\n\t                statement = [];\n\t                $statement = $(this);\n\t                $rules = $statement.find('.reasonsRule');\n\t\n\t                $rules.each(function () {\n\t\n\t                    $rule = $(this);\n\t\n\t                    $toggleSelect = $rule.find('.reasonsRuleToggleField select');\n\t                    toggleSelectValue = parseInt($toggleSelect.val());\n\t\n\t                    // Remove rules where the selected toggle field no longer exists\n\t                    if (self.settings.toggleFieldIds.indexOf(toggleSelectValue) === -1) {\n\t                        $rule.remove();\n\t                        return;\n\t                    }\n\t\n\t                    // Re-render toggle select\n\t                    toggleSelectOpts = '';\n\t                    for (var i = 0; i < self.settings.toggleFields.length; ++i) {\n\t                        toggleSelectOpts += Builder.templates.toggleSelectOption(toggleFields[i], parseInt(toggleFields[i].id) === toggleSelectValue);\n\t                    }\n\t                    $toggleSelect.html(toggleSelectOpts);\n\t\n\t                    // Create the rule\n\t                    statement.push({\n\t                        fieldId: toggleSelectValue,\n\t                        compare: $rule.find('.reasonsRuleCompare select').val(),\n\t                        value: $rule.find('.reasonsRuleValue *:input:first').val()\n\t                    });\n\t                });\n\t\n\t                if (statement.length === 0) {\n\t                    $statement.remove();\n\t                    return;\n\t                }\n\t\n\t                self.settings.rules.push(statement);\n\t            });\n\t\n\t            if (this.settings.onChange) this.settings.onChange();\n\t        }\n\t    }, {\n\t        key: 'getConditionals',\n\t        value: function getConditionals() {\n\t            return this.settings.rules && this.settings.rules.length > 0 ? this.settings.rules : false;\n\t        }\n\t    }, {\n\t        key: 'addStatement',\n\t        value: function addStatement(settings) {\n\t\n\t            settings = $.extend({\n\t                rules: false\n\t            }, settings);\n\t\n\t            var $statement = this.$statement.clone(true),\n\t                rules = settings.rules;\n\t\n\t            // Append the statement\n\t            this.$ui.append($statement);\n\t\n\t            if (!rules) {\n\t\n\t                // This is a new statement. Just add a default rule\n\t                this.addRule({\n\t                    target: $statement\n\t                });\n\t            } else {\n\t\n\t                for (var i = 0; i < rules.length; ++i) {\n\t                    this.addRule($.extend({\n\t                        target: $statement\n\t                    }, rules[i]));\n\t                }\n\t            }\n\t\n\t            return $statement;\n\t        }\n\t    }, {\n\t        key: 'addRule',\n\t        value: function addRule(settings) {\n\t\n\t            settings = $.extend({\n\t                fieldId: null,\n\t                compare: null,\n\t                value: null\n\t            }, settings);\n\t\n\t            var $rule = this.$rule.clone(true),\n\t                $target = settings.target || this.$ui.find('.reasonsStatement:last'),\n\t                fieldId = settings.fieldId,\n\t                compare = settings.compare,\n\t                value = settings.value;\n\t\n\t            if (fieldId) $rule.find('.reasonsRuleToggleField select').val(fieldId);\n\t\n\t            if ($target.length > 0) {\n\t                $target.find('.reasonsRules:first').append($rule);\n\t            } else {\n\t                return false;\n\t            }\n\t\n\t            $rule.find('.reasonsRuleToggleField select').trigger('change');\n\t\n\t            if (compare) {\n\t                $rule.find('.reasonsRuleCompare select').val(compare);\n\t            }\n\t\n\t            if (value) {\n\t                $rule.find('.reasonsRuleValue *:input:first').val(value);\n\t            }\n\t\n\t            if (this.settings.onChange) this.settings.onChange();\n\t\n\t            return $rule;\n\t        }\n\t    }, {\n\t        key: 'onAddRuleBtnClick',\n\t        value: function onAddRuleBtnClick(e) {\n\t            e.preventDefault();\n\t            var $target = $(e.currentTarget).parents('.reasonsStatement');\n\t            this.addRule({\n\t                target: $target\n\t            });\n\t        }\n\t    }, {\n\t        key: 'onRemoveRuleBtnClick',\n\t        value: function onRemoveRuleBtnClick(e) {\n\t            e.preventDefault();\n\t            var $target = $(e.currentTarget),\n\t                $rule = $target.parents('.reasonsRule');\n\t            $rule.remove();\n\t            this.render();\n\t        }\n\t    }, {\n\t        key: 'onAddStatementBtnClick',\n\t        value: function onAddStatementBtnClick(e) {\n\t            e.preventDefault();\n\t            this.addStatement();\n\t        }\n\t    }, {\n\t        key: 'onRuleToggleFieldChange',\n\t        value: function onRuleToggleFieldChange(e) {\n\t\n\t            e.preventDefault();\n\t\n\t            // Render toggle value\n\t            var $target = $(e.currentTarget),\n\t                $rule = $target.parents('.reasonsRule'),\n\t                $ruleValue = $rule.find('.reasonsRuleValue'),\n\t                toggleFieldId = $target.val(),\n\t                toggleField = this.getToggleFieldById(toggleFieldId),\n\t                toggleFieldType = toggleField.type,\n\t                toggleFieldSettings = toggleField.settings,\n\t                ruleValueContent = '';\n\t\n\t            console.log('>>>', toggleFieldType);\n\t\n\t            switch (toggleFieldType) {\n\t\n\t                // Lightswitch - true/false\n\t                case 'Lightswitch':\n\t                    ruleValueContent = Builder.templates.select([{ true: Craft.t('on') }, { false: Craft.t('off') }]);\n\t                    break;\n\t\n\t                // Option based inputs\n\t                case 'Dropdown':case 'MultiSelect':case 'Checkboxes':case 'RadioButtons':case 'ButtonBox_Buttons':case 'ButtonBox_Colours':case 'ButtonBox_TextSize':case 'ButtonBox_Width':\n\t                    var values = toggleFieldSettings.options,\n\t                        options = [],\n\t                        option;\n\t                    for (var i = 0; i < values.length; ++i) {\n\t                        option = {};\n\t                        option[values[i].value] = values[i].label;\n\t                        options.push(option);\n\t                    }\n\t                    ruleValueContent = Builder.templates.select(options, toggleFieldType === 'MultiSelect' || toggleFieldType === 'Checkboxes');\n\t                    break;\n\t\n\t                // Number input\n\t                case 'Number':\n\t                    ruleValueContent = Builder.templates.number(toggleFieldSettings);\n\t                    break;\n\t\n\t                // Button Box – Stars\n\t                case 'ButtonBox_Stars':\n\t                    var numStars = parseInt(toggleFieldSettings.numStars) + 1,\n\t                        option,\n\t                        options = [];\n\t                    for (var i = 0; i < numStars; ++i) {\n\t                        option = {};\n\t                        option['' + i] = i;\n\t                        options.push(option);\n\t                    }\n\t                    ruleValueContent = Builder.templates.select(options);\n\t                    break;\n\t\n\t                // Position Select\n\t                case 'PositionSelect':\n\t                    var values = toggleFieldSettings.options,\n\t                        options = [],\n\t                        option;\n\t                    for (var i = 0; i < values.length; ++i) {\n\t                        option = {};\n\t                        option[values[i]] = values[i].charAt(0).toUpperCase() + values[i].slice(1);\n\t                        options.push(option);\n\t                    }\n\t                    ruleValueContent = Builder.templates.select(options);\n\t                    break;\n\t\n\t                // Relational fields\n\t                case 'Entries':case 'Categories':case 'Tags':case 'Assets':case 'Users':case 'Calendar_Event':\n\t                    var options = [{\n\t                        'null': Craft.t('Empty').toLowerCase()\n\t                    }, {\n\t                        'notnull': Craft.t('Not empty').toLowerCase()\n\t                    }];\n\t                    ruleValueContent = Builder.templates.select(options);\n\t                    break;\n\t\n\t                // Just render a plain text input for anything else\n\t                default:\n\t                    ruleValueContent = Builder.templates.input(toggleFieldSettings);\n\t            }\n\t\n\t            $ruleValue.html(ruleValueContent);\n\t        }\n\t    }, {\n\t        key: 'onRuleCompareChange',\n\t        value: function onRuleCompareChange(e) {\n\t            e.preventDefault();\n\t        }\n\t    }, {\n\t        key: 'onRuleValueChange',\n\t        value: function onRuleValueChange(e) {\n\t            e.preventDefault();\n\t        }\n\t\n\t        // Normally I wouldn't have this shitstorm at the end of the class, but it takes up so much space at the top LOL\n\t\n\t    }]);\n\t\n\t    return Builder;\n\t}();\n\t\n\tBuilder.settings = {\n\t    fieldId: null,\n\t    toggleFields: null,\n\t    rules: null,\n\t    onChange: null\n\t};\n\tBuilder.templates = {\n\t    select: function select(options, isMultiSelect) {\n\t        var selectOptions = [],\n\t            option,\n\t            value,\n\t            label;\n\t        for (var i = 0; i < options.length; ++i) {\n\t            option = options[i];\n\t            value = Object.keys(option)[0];\n\t            label = option[value];\n\t            selectOptions.push('<option value=\"' + value + '\">' + label + '</option>');\n\t        }\n\t        return '<div class=\"' + (isMultiSelect ? 'multiselect' : 'select') + '\"><select' + (isMultiSelect ? ' multiple' : '') + '>' + selectOptions.join('') + '</select></div>';\n\t    },\n\t    toggleSelectOption: function toggleSelectOption(toggleField, selected) {\n\t        return '<option value=\"' + toggleField.id + '\" data-type=\"' + toggleField.type + '\"' + (selected ? ' selected' : '') + '>' + toggleField.name + '</option>';\n\t    },\n\t    number: function number(settings) {\n\t        return '<div class=\"input\"><input class=\"text\" type=\"number\" value=\"0\" min=\"' + settings.min + '\" max=\"' + settings.max + '\" autocomplete=\"off\"></div>';\n\t    },\n\t    input: function input(settings) {\n\t        var input = '';\n\t        settings = $.extend({\n\t            initialRows: 4,\n\t            placeholder: '',\n\t            multiline: false\n\t        }, settings);\n\t        if (settings.multiline === '1') {\n\t            input += '<textarea rows=\"' + settings.initialRows + '\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\"></textarea>';\n\t        } else {\n\t            input += '<input class=\"text\" type=\"text\" size=\"20\" value=\"\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\">';\n\t        }\n\t        return '<div class=\"input\">' + input + '</div>';\n\t    },\n\t    builderUi: function builderUi() {\n\t        return '<div class=\"reasonsBuilderUi\">' + '<div class=\"wrapper\">' + '<div class=\"heading\"><span>' + Craft.t('Show this field if') + '</span></div>' + '<div class=\"reasonsBuilder\">' + '<div class=\"reasonsStatement\">' + '<span class=\"delimiter\">' + Craft.t('or') + '</span>' + '<div class=\"reasonsRules\">' + '<div class=\"reasonsRule\">' + '<div class=\"reasonsRuleParams\">' + '<div class=\"select reasonsRuleToggleField\"><select /></div>' + '<div class=\"select reasonsRuleCompare\">' + '<select>' + '<option value=\"==\">' + Craft.t('is equal to') + '</option>' + '<option value=\"!=\">' + Craft.t('is not equal to') + '</option>' + '</select>' + '</div>' + '<div class=\"reasonsRuleValue\" />' + '</div>' + '<div class=\"reasonsRuleAmend\">' + '<a class=\"delete icon reasonsRemoveRule\" title=\"' + Craft.t('Remove rule') + '\"></a>' + '<a class=\"add icon reasonsAddRule\" title=\"' + Craft.t('and') + '\"></a>' + '</div>' + '<span class=\"reasonsRuleLead\">' + Craft.t('and') + '</span>' + '</div>' + '</div>' + '</div>' + '</div>' + '<div class=\"reasonsAdd\">' + '<a class=\"btn reasonsAddStatement\">' + Craft.t('Add rules') + '</a>' + '</div>' + '</div>' + '<div class=\"reasonsMessage\"></div>' + '</div>';\n\t    }\n\t};\n\texports.default = Builder;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Builder = __webpack_require__(11);\n\t\n\tvar _Builder2 = _interopRequireDefault(_Builder);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BuilderModal = function () {\n\t  function BuilderModal(builder, settings) {\n\t    _classCallCheck(this, BuilderModal);\n\t\n\t    this.$el = $(BuilderModal.template);\n\t    this.$builder = builder.get().appendTo(this.$el.find('.body'));\n\t    this.settings = $.extend({}, settings);\n\t    this.modal = new Garnish.Modal(this.$el, {\n\t      resizable: true,\n\t      onHide: this.settings.onHide.bind(this)\n\t    });\n\t    this.$el.on('click', '.close', this.hide.bind(this));\n\t  }\n\t\n\t  _createClass(BuilderModal, [{\n\t    key: 'hide',\n\t    value: function hide(e) {\n\t      if (e) {\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t      }\n\t      this.modal.hide();\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.modal.destroy();\n\t      delete this.modal;\n\t      this.$builder.remove();\n\t      delete this.$builder;\n\t      delete this.settings;\n\t      delete this.$el;\n\t    }\n\t  }, {\n\t    key: 'onHide',\n\t    value: function onHide() {\n\t      if (this.settings.onHide) this.settings.onHide();\n\t      this.destroy();\n\t    }\n\t  }]);\n\t\n\t  return BuilderModal;\n\t}();\n\t\n\tBuilderModal.template = '<div class=\"modal elementselectormodal reasonsModal\">' + '<div class=\"body\" />' + '<div class=\"footer\">' + '<div class=\"buttons rightalign first\">' + '<div class=\"btn close submit\">Done</div>' + '</div>' + '</div>' + '</div>';\n\texports.default = BuilderModal;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _reasons = __webpack_require__(1);\n\t\n\tvar _reasons2 = _interopRequireDefault(_reasons);\n\t\n\tvar _Builder = __webpack_require__(11);\n\t\n\tvar _Builder2 = _interopRequireDefault(_Builder);\n\t\n\tvar _settings = __webpack_require__(17);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MatrixConfigurator = function () {\n\t  function MatrixConfigurator(matrixClass) {\n\t    _classCallCheck(this, MatrixConfigurator);\n\t\n\t    var fn = matrixClass.prototype;\n\t    var fnInit = fn.init;\n\t    var self = this;\n\t\n\t    fn.init = function () {\n\t      fnInit.apply(this, arguments);\n\t      self.init(this);\n\t    };\n\t  }\n\t\n\t  _createClass(MatrixConfigurator, [{\n\t    key: 'init',\n\t    value: function init(configurator) {\n\t\n\t      this.configurator = configurator;\n\t\n\t      // Init existing block types\n\t      for (var id in this.configurator.blockTypes) {\n\t        this.initBlockType(this.configurator.blockTypes[id]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'update',\n\t    value: function update() {}\n\t  }, {\n\t    key: 'initBlockType',\n\t    value: function initBlockType(blockType) {\n\t\n\t      // Sneaky.\n\t      blockType._reasons = {\n\t        $input: $('<input type=\"hidden\" name=\"types[Matrix][blockTypes][' + blockType.id + '][_reasonsPlugin]\" value=\"\" />').appendTo(blockType.$item)\n\t      };\n\t\n\t      // Init fields\n\t      for (var id in blockType.fields) {\n\t        this.initField(blockType.fields[id]);\n\t      }\n\t\n\t      return blockType;\n\t    }\n\t  }, {\n\t    key: 'destroyBlockType',\n\t    value: function destroyBlockType() {}\n\t  }, {\n\t    key: 'updateBlockType',\n\t    value: function updateBlockType() {}\n\t  }, {\n\t    key: 'onBlockTypeAdded',\n\t    value: function onBlockTypeAdded() {}\n\t  }, {\n\t    key: 'onBlockTypeRemoved',\n\t    value: function onBlockTypeRemoved() {}\n\t  }, {\n\t    key: 'initField',\n\t    value: function initField(field) {\n\t\n\t      console.log(field, field.id);\n\t\n\t      var toggleFields = this.getToggleFieldsForField(field);\n\t      var conditionals = this.getConditionalsForField(field);\n\t\n\t      // Create the builder\n\t      var builder = new _Builder2.default({\n\t        fieldId: field.id,\n\t        toggleFields: toggleFields,\n\t        rules: conditionals,\n\t        onChange: this.onConditionalsBuilderChange.bind(field)\n\t      });\n\t\n\t      field.$fieldSettingsContainer.children('a.delete:last').before($('<div><hr /></div>').prepend(builder.get()));\n\t\n\t      // Again, sneaky.\n\t      field._reasons = {\n\t        builder: builder\n\t      };\n\t    }\n\t  }, {\n\t    key: 'destroyField',\n\t    value: function destroyField() {}\n\t\n\t    // Whenever a field's type changes, we'll need to re-evaluate the whole block type\n\t\n\t    /*\n\t      Re-eval block if\n\t       - A field's type changes\n\t      - A field's handle changes (or, not neccessary actually)\n\t      - \n\t     */\n\t\n\t  }, {\n\t    key: 'onFieldTypeChange',\n\t    value: function onFieldTypeChange(e) {\n\t\n\t      // const $target = $(e.currentTarget);\n\t      // const $field = $target.closest('[data-id]');\n\t      // const $block = $field.parent();\n\t\n\t      // console.log('update block', $block.data('id'));\n\t\n\t    }\n\t  }, {\n\t    key: 'onFieldAdded',\n\t    value: function onFieldAdded() {}\n\t  }, {\n\t    key: 'onFieldRemoved',\n\t    value: function onFieldRemoved() {}\n\t  }, {\n\t    key: 'onConditionalsBuilderChange',\n\t    value: function onConditionalsBuilderChange() {}\n\t    // Add/remove js-reasons-has-conditionals className for field\n\t    // if builder.getConditionals()\n\t\n\t\n\t    /*\n\t    * Convenience methods\n\t    *\n\t    */\n\t\n\t  }, {\n\t    key: 'getToggleFieldsForField',\n\t    value: function getToggleFieldsForField(field) {\n\t      var toggleFieldTypes = _reasons2.default.getToggleFieldTypes();\n\t      var blockType = field.blockType;\n\t      var toggleFields = [];\n\t      var siblingField = void 0;\n\t      for (var id in blockType.fields) {\n\t        siblingField = blockType.fields[id];\n\t        if (siblingField.id === field.id) continue;\n\t        if (toggleFieldTypes.indexOf(siblingField.selectedFieldType) > -1) {\n\t          toggleFields.push(this.getToggleFieldDataFromField(siblingField));\n\t        }\n\t      }\n\t      return toggleFields;\n\t    }\n\t  }, {\n\t    key: 'getToggleFieldDataFromField',\n\t    value: function getToggleFieldDataFromField(field) {\n\t      var fieldType = field.selectedFieldType;\n\t\n\t      var settings = null;\n\t      return {\n\t        id: field.id,\n\t        handle: field.$handleInput.val(),\n\t        name: field.$nameInput.val(),\n\t        type: fieldType,\n\t        contentAttribute: null,\n\t        settings: this.getToggleFieldSettingsFromField(field)\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getToggleFieldSettingsFromField',\n\t    value: function getToggleFieldSettingsFromField(field) {\n\t      if (field.selectedFieldType === 'Dropdown') {\n\t        //console.log\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'getConditionalsForField',\n\t    value: function getConditionalsForField() {\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return MatrixConfigurator;\n\t}();\n\t\n\texports.default = MatrixConfigurator;\n\n/***/ },\n/* 14 */,\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FormParser = function FormParser() {\n\t  _classCallCheck(this, FormParser);\n\t\n\t  console.log('form parser init');\n\t};\n\t\n\texports.default = FormParser;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MatrixParser = function MatrixParser() {\n\t  _classCallCheck(this, MatrixParser);\n\t\n\t  console.log('matrix parser init');\n\t};\n\t\n\texports.default = MatrixParser;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar OPTION_BASED_FIELDTYPES = exports.OPTION_BASED_FIELDTYPES = ['Dropdown', 'MultiSelect', 'Checkboxes', 'RadioButtons', 'ButtonBox_Buttons', 'ButtonBox_Colours', 'ButtonBox_TextSize', 'ButtonBox_Width'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** reasons.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b5ad3f4b1e286b738074\n **/","import Reasons from 'reasons';\nCraft.ReasonsPlugin = new Reasons();\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","import Craft from 'craft';\n\nimport 'styles/reasons.scss'\nimport 'lib/jquery-extensions'\n\nimport * as constants from 'core/constants'\n\nimport FieldLayoutDesigner from 'modules/FieldLayoutDesigner'\nimport MatrixConfigurator from 'modules/MatrixConfigurator'\nimport FormParser from 'modules/FormParser'\nimport MatrixParser from 'modules/MatrixParser'\n\nexport default class Reasons {\n\n  static data = null\n\n  init (data) {\n\n    Reasons.data = data;\n    \n    const classes = { FieldLayoutDesigner, MatrixConfigurator };\n    for (var className in classes) {\n      const reasonsClass = classes[className];\n      const craftClass = Craft[className] || null;\n      if (!craftClass) continue;\n      new reasonsClass(craftClass);\n    }\n\n    $(this.initParser.bind(this));\n\n    console.info('Reasons init', Reasons.data);\n\n  }\n\n  /*\n  * Initializes the primary parser on the page\n  *\n  */\n  initParser () {\n\n    this.destroyParser();\n\n    const formAttributes = Reasons.getFormAttributes();\n    \n    if (formAttributes.context !== constants.PARSER_CONTEXT) return false;\n\n    if (formAttributes.conditionals) {\n      this.parser = new FormParser($form, formAttributes.conditionals);\n    }\n\n  }\n\n  destroyParser () {\n    if (this.parser) {\n      this.parser.destroy();\n      delete this.parser;\n    }\n  }\n\n  /*\n  *   Core methods\n  *\n  */\n  static getConditionals (context) {\n      return context ? (Reasons.data.conditionals && Reasons.data.conditionals.hasOwnProperty(context) ? Reasons.data.conditionals[context] : null) : (Reasons.data.conditionals || {});\n  }\n\n  static getConditionalContextFromAttributes (attributes) {\n    return attributes.type + (attributes.id ? ':' + attributes.id : '');\n  }\n\n  static getToggleFields () {\n      return Reasons.data.toggleFields ? Reasons.data.toggleFields : [];\n  }\n\n  static getToggleFieldById (fieldId) {\n      fieldId = parseInt(fieldId);\n      const toggleFields = Reasons.getToggleFields();\n      const numToggleFields = toggleFields.length;\n      for (let i = 0; i < numToggleFields; ++i) {\n          if (parseInt(toggleFields[i].id) === fieldId){\n              return toggleFields[i];\n          }\n      }\n      return false;\n  }\n\n  static getFieldIds () {\n      return Reasons.data.fieldIds ? Reasons.data.fieldIds : {};\n  }\n\n  static getFieldIdByHandle (fieldHandle) {\n      const fieldIds = Reasons.getFieldIds();\n      return fieldIds && fieldIds.hasOwnProperty(fieldHandle) ? fieldIds[fieldHandle] : false;\n  }\n\n  static getToggleFieldTypes () {\n      return Reasons.data.toggleFieldTypes ? Reasons.data.toggleFieldTypes : [];\n  }\n\n  static getFormAttributes ($form) {\n\n    if (!$form) {\n      $form = (Craft.cp.$primaryForm && Craft.cp.$primaryForm.length) ? Craft.cp.$primaryForm : $('#content form:first');\n      if (!$form || !$form.length) return false;\n    }\n\n    if ($form.data('elementEditor')) {\n        return false;\n    }\n\n    // Get namespace\n    let namespace = $form.find('input[type=\"hidden\"][name=\"namespace\"]').val();\n    if (namespace) {\n        namespace += '-';\n    }\n\n    const action = $form.find('input[type=\"hidden\"][name=\"action\"]').val();\n    let type;\n    let idInputSelector;\n\n    switch (action) {\n\n        case constants.ASSET_SOURCE_ACTION :\n            type = constants.ASSET_SOURCE_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"sourceId\"]';\n            break;\n\n        case constants.CATEGORY_ACTION :\n        case constants.CATEGORY_GROUP_ACTION :\n            type = constants.CATEGORY_GROUP_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"groupId\"]';\n            break;\n\n        case constants.GLOBAL_SET_CONTENT_ACTION:\n        case constants.GLOBAL_SET_ACTION :\n            type = constants.GLOBAL_SET_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"setId\"]';\n            break;\n\n        case constants.ENTRY_ACTION :\n            const $entryType = $form.find('select#entryType, input[type=\"hidden\"][name=\"entryTypeId\"], input[type=\"hidden\"][name=\"typeId\"], #' + namespace + 'entryType');\n            type = $entryType.length ? constants.ENTRY_TYPE_HANDLE : constants.SECTION_HANDLE;\n            idInputSelector = $entryType.length ? 'select#entryType, input[type=\"hidden\"][name=\"entryTypeId\"], input[type=\"hidden\"][name=\"typeId\"], #' + namespace + 'entryType' : 'input[type=\"hidden\"][name=\"sectionId\"], #' + namespace + 'section';\n            break;\n\n        case constants.ENTRY_TYPE_ACTION : \n            type = constants.ENTRY_TYPE_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"entryTypeId\"]';\n            break;\n\n        case constants.TAG_ACTION :\n        case constants.TAG_GROUP_ACTION :\n            type = constants.TAG_GROUP_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"tagGroupId\"], input[type=\"hidden\"][name=\"groupId\"]';\n            break;\n\n        case constants.USERS_ACTION :\n        case constants.USERS_FIELDS_ACTION :\n            type = constants.USERS_HANDLE;\n            break;\n\n        case constants.FIELDS_ACTION :\n            type = constants.FIELDS_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"fieldId\"]';\n            break;\n\n        case constants.SOLSPACE_CALENDAR_SETTINGS_ACTION :\n        case constants.SOLSPACE_CALENDAR_EVENTS_ACTION :\n            type = constants.SOLSPACE_CALENDAR_HANDLE;\n            break;\n\n        case constants.COMMERCE_PRODUCT_TYPE_ACTION :\n        case constants.COMMERCE_PRODUCT_ACTION :\n            type = constants.COMMERCE_PRODUCT_TYPE_HANDLE;\n            idInputSelector = 'input[type=\"hidden\"][name=\"typeId\"]';\n            break;\n\n    }\n\n    if (!type) {\n        return false;\n    }\n\n    let attrs = {\n        type : type,\n        context : Reasons.getFormContext($form),\n        id : idInputSelector ? ($form.find(idInputSelector).val() | 0) : false\n    };\n\n    const conditionalsContext = Reasons.getConditionalContextFromAttributes(attrs);\n    attrs['conditionals'] = Reasons.getConditionals(conditionalsContext);\n\n    return attrs;\n          \n  }\n\n  static getFormContext ($form) {\n\n      if ($form.data('elementEditor')) {\n          return false;\n      }\n\n      const action = $form.find('input[type=\"hidden\"][name=\"action\"]').val();\n\n      switch (action) {\n\n          case constants.GLOBAL_SET_CONTENT_ACTION :\n          case constants.ENTRY_ACTION :\n          case constants.TAG_ACTION :\n          case constants.CATEGORY_ACTION :\n          case constants.USERS_ACTION :\n          case constants.SOLSPACE_CALENDAR_EVENTS_ACTION :\n          case constants.COMMERCE_PRODUCT_ACTION :\n              return constants.FORM_PARSER_CONTEXT;\n\n          case constants.ASSET_SOURCE_ACTION :\n          case constants.CATEGORY_GROUP_ACTION :\n          case constants.GLOBAL_SET_ACTION :\n          case constants.ENTRY_TYPE_ACTION : \n          case constants.TAG_GROUP_ACTION :\n          case constants.USERS_FIELDS_ACTION :\n          case constants.SOLSPACE_CALENDAR_SETTINGS_ACTION :\n          case constants.COMMERCE_PRODUCT_TYPE_ACTION :\n              return constants.FIELD_LAYOUT_DESIGNER_CONTEXT;\n\n          // case constants.FIELDS_ACTION :\n          //     return FIELD_DESIGNER_CONTEXT;\n          \n      }\n\n      return false;\n\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/reasons.js\n **/","module.exports = Craft;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Craft\"\n ** module id = 2\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./reasons.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./reasons.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./reasons.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/styles/reasons.scss\n ** module id = 3\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".field.reasonsHide{height:0!important;visibility:hidden!important;overflow:hidden!important;pointer-events:none!important;margin:0!important;padding:0!important;position:absolute!important}.reasonsModal .body{overflow:auto}.reasonsBuilderUi .heading{margin-bottom:20px;font-weight:700}.reasonsBuilderUi.disabled{opacity:1}.reasonsBuilderUi.disabled .wrapper{display:none}.reasonsMessage{color:#8f98a3}.reasonsBuilder,.reasonsStatement{width:100%;float:left}.reasonsStatement{margin-bottom:20px;padding-bottom:18px;border-bottom:1px solid #ccc;position:relative}.reasonsStatement .delimiter{display:inline-block;position:absolute;left:20px;bottom:-6px;padding:0 6px;background-color:#fff;line-height:1;font-size:10px;font-weight:700;color:#999;text-transform:uppercase}.reasonsRuleParams,.reasonsRuleParams>*{display:inline-block;width:auto;float:left;position:relative;margin:0 10px 10px 0}.reasonsRuleParams{margin:0}.reasonsRule{width:100%;float:left;clear:both;margin-right:0}.reasonsRuleLead{display:block;line-height:1;font-size:12px;color:#999;float:left;clear:both;margin-bottom:8px}.reasonsAddRule,.reasonsRemoveRule{display:inline-block;margin:6px 2px}.reasonsAddRule{display:none;margin-left:5px;margin-top:0;float:left;clear:both}.reasonsRule:last-child .reasonsAddRule{display:inline-block}.reasonsRule:last-child .reasonsRuleLead{display:none}.reasonsAdd{width:100%;float:left}.fld-field.js-reasons-has-conditionals{border-style:dashed}.matrix-configurator .reasonsAdd{display:inline-block;float:none;width:auto;margin-right:10px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/styles/reasons.scss\n ** module id = 4\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 5\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 6\n ** module chunks = 0\n **/","import jQuery from 'jquery';\n\n\n/*!\n * jQuery.fn.hasAttr()\n *\n * Copyright 2011, Rick Waldron\n * Licensed under MIT license.\n *\n */\n(function( jQuery ) {\n  jQuery.fn.hasAttr = function( name ) {\n      for ( var i = 0, l = this.length; i < l; i++ ) {\n          if ( !!( this.attr( name ) !== undefined ) ) {\n              return true;\n          }\n      }\n      return false;\n  };\n})( jQuery );\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/jquery-extensions.js\n **/","module.exports = jQuery;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jQuery\"\n ** module id = 8\n ** module chunks = 0\n **/","export const ASSET_SOURCE_HANDLE =                   'assetSource';\nexport const CATEGORY_GROUP_HANDLE =                 'categoryGroup';\nexport const TAG_GROUP_HANDLE =                      'tagGroup';\nexport const GLOBAL_SET_HANDLE =                     'globalSet';\nexport const ENTRY_TYPE_HANDLE =                     'entryType';\nexport const SECTION_HANDLE =                        'section';\nexport const USERS_HANDLE =                          'users';\nexport const FIELDS_HANDLE =                         'field';\nexport const SOLSPACE_CALENDAR_HANDLE =              'solspaceCalendar';\n// export const COMMERCE_PRODUCT_TYPE_HANDLE =        'commerceProductType';\nexport const ASSET_SOURCE_ACTION =                   'assetSources/saveSource';\nexport const CATEGORY_ACTION =                       'categories/saveCategory';\nexport const CATEGORY_GROUP_ACTION =                 'categories/saveGroup';\nexport const TAG_ACTION =                            'tagManager/saveTag';\nexport const TAG_GROUP_ACTION =                      'tags/saveTagGroup';\nexport const GLOBAL_SET_CONTENT_ACTION =             'globals/saveContent';\nexport const GLOBAL_SET_ACTION =                     'globals/saveSet';\nexport const ENTRY_ACTION =                          'entries/saveEntry';\nexport const ENTRY_TYPE_ACTION =                     'sections/saveEntryType';\nexport const USERS_ACTION =                          'users/saveUser';\nexport const USERS_FIELDS_ACTION =                   'users/saveFieldLayout';\nexport const FIELDS_ACTION =                         'fields/saveField';\nexport const SOLSPACE_CALENDAR_EVENTS_ACTION =       'calendar/events/saveEvent';\nexport const SOLSPACE_CALENDAR_SETTINGS_ACTION =     'calendar/settings/saveSettings';\n// export const COMMERCE_PRODUCT_TYPE_ACTION =       'commerce/productTypes/saveProductType';\n// export const COMMERCE_PRODUCT_ACTION =            'commerce/products/saveProduct';\n\nexport const FIELD_LAYOUT_DESIGNER_CONTEXT =          'FIELD_LAYOUT_DESIGNER_CONTEXT';\nexport const MATRIX_CONFIGURATOR_CONTEXT =            'MATRIX_CONFIGURATOR_CONTEXT';\nexport const FORM_PARSER_CONTEXT =                    'FORM_PARSER_CONTEXT';\nexport const MATRIX_PARSER_CONTEXT =                  'MATRIX_PARSER_CONTEXT';\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/constants.js\n **/","import Reasons from 'reasons'\nimport Builder from 'modules/Builder'\nimport BuilderModal from 'modules/BuilderModal'\n\nexport default class FieldLayoutDesigner {\n\n  constructor (fldClass) {\n    \n    const fn = fldClass.prototype;\n    const fnFieldDrag = fldClass.FieldDrag.prototype;\n    const self = this;\n\n    const fnInit = fn.init;\n    fn.init = function () {\n      fnInit.apply(this, arguments);\n      self.init(this);\n    }\n\n    const fnInitField = fn.initField;\n    fn.initField = function ($field) {\n      fnInitField.apply(this, arguments);\n      // Create the \"Edit conditionals\" field settings menu option\n      const menu = $field.find('.settings').data('menubtn').menu || null;\n      const $remove = menu && menu.$container ? menu.$container.find('a[data-action=\"remove\"]').parent() : null;\n      const $toggle = $('<li><a data-action=\"toggle-reasons\">'+Craft.t('Edit conditionals')+'</a></li>');\n      if ($remove && $remove.length) {\n        $toggle\n          .insertBefore($remove)\n          .find('a')\n            .data('menu', menu)\n            .on('click', self.onReasonsToggleOptionSelect.bind(self));\n      }\n      self.update();\n    }\n\n    const fnRemoveFieldById = fn.removeFieldById;\n    fn.removeFieldById = function (fieldId) {\n      const $field = this.$allFields.filter('[data-id='+fieldId+']:first');\n      if ($field && $field.length && $field.data('_reasonsPlugin')) {\n        $field.data('_reasonsPlugin').destroy();\n        $field.data('_reasonsPlugin', null);\n      }\n      fnRemoveFieldById.apply(this, arguments);\n      self.update();\n    }\n\n    const fnFieldDragOnDragStop = fnFieldDrag.onDragStop;\n    fnFieldDrag.onDragStop = function () {\n      fnFieldDragOnDragStop.apply(this, arguments);\n      self.update();\n    }\n    \n  }\n\n  init (fld) {\n\n    const formAttributes = Reasons.getFormAttributes();\n    if (!formAttributes) return false;\n    \n    this.fld = fld;\n    this.$input = $('<input type=\"hidden\" name=\"_reasonsPlugin\" value=\"\" />').appendTo(this.fld.$container);\n\n    this.setConditionals(formAttributes.conditionals);\n    this.update();\n\n  }\n\n  toggleModal ($field) {\n\n    const self = this;\n\n    new BuilderModal($field.data('_reasonsPlugin'), {\n      onHide: function () {\n        self.onBuilderModalHide(this);\n      }\n    });\n\n  }\n\n  update () {\n\n    if (!this.fld) return false;\n\n    const self = this;\n\n    let conditionals = {};\n    let $tab;\n    let $field;\n    let $fieldsInTab;\n    let fieldId;\n    let toggleFieldsInTab;\n    let toggleField;\n\n    this.fld.$tabContainer.children().each(function () {\n      \n      $tab = $(this);\n      $fieldsInTab = $tab.children('.fld-tabcontent').children();\n\n      toggleFieldsInTab = [];\n      $fieldsInTab.each(function () {\n        toggleField = Reasons.getToggleFieldById($(this).data('id'));\n        if (toggleField) toggleFieldsInTab.push(toggleField);\n      });\n      \n      $fieldsInTab.each(function () {\n        \n        $field = $(this);\n        fieldId = $field.data('id');\n        \n        if (!$field.data('_reasonsPlugin')) {\n          // Create the conditionals builder\n          $field.data('_reasonsPlugin', new Builder({\n            fieldId: fieldId,\n            toggleFields: toggleFieldsInTab,\n            rules: self.getConditionals(fieldId)\n          }));\n        } else {\n          $field.data('_reasonsPlugin').update({\n            toggleFields: toggleFieldsInTab\n          });\n        }\n\n        // Get rules\n        let rules = $field.data('_reasonsPlugin').getConditionals();\n        if (rules) {\n            conditionals[fieldId] = rules;\n            $field.addClass('js-reasons-has-conditionals');\n        } else {\n            $field.removeClass('js-reasons-has-conditionals');\n        }\n\n      });\n      \n    });\n\n    this.setConditionals(conditionals);\n\n  }\n\n  getConditionals (fieldId) {\n    if (fieldId) {\n      return this.conditionals && this.conditionals.hasOwnProperty(fieldId) ? this.conditionals[fieldId] : null;\n    }\n    return this.conditionals || null;\n  }\n\n  setConditionals (conditionals) {\n    this.conditionals = conditionals;\n    if (!this.conditionals || Object.keys(this.conditionals).length === 0){\n        this.$input.attr('value', '');\n    } else {\n        this.$input.attr('value', JSON.stringify(this.conditionals));\n    }\n  }\n\n  onBuilderModalHide (modal) {\n    this.update();\n  }\n\n  onReasonsToggleOptionSelect (e) {\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const option = e.currentTarget;\n    const menu = $(option).data('menu');\n    const $field = menu.$anchor.parent();\n\n    menu.hide();\n\n    this.toggleModal($field);\n\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/FieldLayoutDesigner.js\n **/","import Reasons from 'reasons'\n\nexport default class Builder {\n\n    static settings = {\n        fieldId: null,\n        toggleFields: null,\n        rules: null,\n        onChange: null\n    }\n\n    constructor (settings) {\n        \n        this.setSettings(settings);\n        \n        this.fieldId = this.settings.fieldId;\n        \n        this.$container = $(Builder.templates.builderUi());\n        this.$ui = this.$container.find('.reasonsBuilder:first');\n\n        // Create rule template\n        this.$rule = this.$container.find('.reasonsRule:first').clone(true);\n\n        // Create statement template\n        this.$statement = this.$container.find('.reasonsStatement:first').clone(true);\n        this.$statement.find('.reasonsRule').remove();\n\n        this.$message = this.$container.find('.reasonsMessage:first');\n\n        // Add some event listeners\n        this.$container\n            .on('click', '.reasonsAddRule', this.onAddRuleBtnClick.bind(this))\n            .on('click', '.reasonsRemoveRule', this.onRemoveRuleBtnClick.bind(this))\n            .on('click', '.reasonsAddStatement', this.onAddStatementBtnClick.bind(this))\n            .on('change', '.reasonsRuleToggleField select', this.onRuleToggleFieldChange.bind(this))\n            .on('change', '.reasonsRuleCompare select', this.onRuleCompareChange.bind(this))\n            .on('change', '.reasonsRuleValue *:input', this.onRuleValueChange.bind(this));\n\n        this.$ui.html('');\n\n        if (this.settings.toggleFields) {\n            this.setToggleFields(this.settings.toggleFields);\n        }\n\n        if (this.settings.rules && this.settings.rules.length > 0) {\n            for (var i = 0; i < this.settings.rules.length; ++i) {\n                this.addStatement({\n                    rules : this.settings.rules[i]\n                });\n            }\n        }\n\n        this.render();\n\n    }\n\n    setSettings (settings) {\n        this.settings = $.extend({}, this.settings || Builder.settings, settings);\n    }\n\n    destroy () {\n        this.$container.off('click change');\n        delete this.$container;\n        delete this.$ui;\n        delete this.$statement;\n        delete this.$message;\n        delete this.settings;\n        delete this.fieldId;\n    }\n\n    get () {\n        return this.$container;\n    }\n\n    disable () {\n        this.$container.addClass('disabled');\n    }\n\n    enable () {\n        this.$container.removeClass('disabled');\n    }\n\n    update (settings) {\n        this.setSettings(settings);\n        this.setToggleFields(this.settings.toggleFields);\n        this.render();\n    }\n\n    setToggleFields (toggleFields) {\n\n        if (!toggleFields) {\n            return false;\n        }\n\n        this.settings.toggleFields = [];\n        this.settings.toggleFieldIds = [];\n        this.settings.toggleFieldsByIds = {};\n\n        for(var i = 0; i < toggleFields.length; ++i){\n            if (toggleFields[i].id != this.fieldId){\n                this.settings.toggleFields.push(toggleFields[i]);\n                this.settings.toggleFieldIds.push(toggleFields[i].id);\n                this.settings.toggleFieldsByIds[toggleFields[i].id] = toggleFields[i];\n            }\n        }\n\n        // Update rule template\n        var toggleFieldSelectOptions = '';\n        for (var i = 0; i < this.settings.toggleFields.length; ++i){\n            toggleFieldSelectOptions += Builder.templates.toggleSelectOption(this.settings.toggleFields[i]);\n        }\n        this.$rule.find('.reasonsRuleToggleField select').html(toggleFieldSelectOptions);\n\n    }\n\n    getToggleFieldById (id) {\n        return this.settings.toggleFieldsByIds && this.settings.toggleFieldsByIds[id] ? this.settings.toggleFieldsByIds[id] : null;\n    }\n\n    render () {\n\n        this.settings.rules = [];\n\n        var toggleFields = this.settings.toggleFields || [];\n\n        if (toggleFields.length === 0){\n            this.disable();\n            this.$message.text(Craft.t('No toggle fields available.'));\n            return false;\n        } else {\n            this.enable();\n            this.$message.text('');\n        }\n\n        var self = this,\n            statement,\n            $statements = this.$container.find('.reasonsStatement'),\n            $statement,\n            $rules,\n            $rule,\n            $toggleSelect,\n            toggleSelectValue,\n            toggleSelectOpts;\n\n        $statements.each(function () {\n\n            statement = [];\n            $statement = $(this);\n            $rules = $statement.find('.reasonsRule');\n\n            $rules.each(function () {\n\n                $rule = $(this);\n\n                $toggleSelect = $rule.find('.reasonsRuleToggleField select');\n                toggleSelectValue = parseInt($toggleSelect.val());\n\n                // Remove rules where the selected toggle field no longer exists\n                if(self.settings.toggleFieldIds.indexOf(toggleSelectValue) === -1){\n                    $rule.remove();\n                    return;\n                }\n\n                // Re-render toggle select\n                toggleSelectOpts = '';\n                for (var i = 0; i < self.settings.toggleFields.length; ++i){\n                    toggleSelectOpts += Builder.templates.toggleSelectOption(toggleFields[i], parseInt(toggleFields[i].id) === toggleSelectValue);\n                }\n                $toggleSelect.html(toggleSelectOpts);\n\n                // Create the rule\n                statement.push({\n                    fieldId : toggleSelectValue,\n                    compare : $rule.find('.reasonsRuleCompare select').val(),\n                    value : $rule.find('.reasonsRuleValue *:input:first').val()\n                });\n\n            });\n\n            if (statement.length === 0) {\n                $statement.remove();\n                return;\n            }\n\n            self.settings.rules.push(statement);\n\n        });\n\n        if (this.settings.onChange) this.settings.onChange();\n\n    }\n\n    getConditionals () {\n        return this.settings.rules && this.settings.rules.length > 0 ? this.settings.rules : false;\n    }\n\n    addStatement (settings) {\n\n        settings = $.extend({\n            rules : false\n        }, settings);\n\n        var $statement = this.$statement.clone(true),\n            rules = settings.rules;\n\n        // Append the statement\n        this.$ui.append($statement);\n\n        if (!rules) {\n\n            // This is a new statement. Just add a default rule\n            this.addRule({\n                target : $statement\n            });\n\n        } else {\n\n            for (var i = 0; i < rules.length; ++i){\n                this.addRule($.extend({\n                    target : $statement\n                },rules[i]));\n            }\n\n        }\n\n        return $statement;\n\n    }\n\n    addRule (settings) {\n\n        settings = $.extend({\n            fieldId : null,\n            compare : null,\n            value : null\n        },settings);\n\n        var $rule = this.$rule.clone(true),\n            $target = settings.target || this.$ui.find('.reasonsStatement:last'),\n            fieldId = settings.fieldId,\n            compare = settings.compare,\n            value = settings.value;\n\n        if (fieldId) $rule.find('.reasonsRuleToggleField select').val(fieldId);\n\n        if ($target.length > 0) {\n            $target.find('.reasonsRules:first').append($rule);\n        } else {\n            return false;\n        }\n\n        $rule\n            .find('.reasonsRuleToggleField select')\n            .trigger('change');\n\n        if (compare) {\n            $rule.find('.reasonsRuleCompare select').val(compare);\n        }\n\n        if (value) {\n            $rule.find('.reasonsRuleValue *:input:first').val(value);\n        }\n\n        if (this.settings.onChange) this.settings.onChange();\n\n        return $rule;\n\n    }\n\n    onAddRuleBtnClick (e) {\n        e.preventDefault();\n        var $target = $(e.currentTarget).parents('.reasonsStatement');\n        this.addRule({\n            target : $target\n        });\n    }\n\n    onRemoveRuleBtnClick (e) {\n        e.preventDefault();\n        var $target = $(e.currentTarget),\n            $rule = $target.parents('.reasonsRule');\n        $rule.remove();\n        this.render();\n    }\n\n    onAddStatementBtnClick (e) {\n        e.preventDefault();\n        this.addStatement();\n    }\n\n    onRuleToggleFieldChange (e) {\n\n        e.preventDefault();\n\n        // Render toggle value\n        var $target = $(e.currentTarget),\n            $rule = $target.parents('.reasonsRule'),\n            $ruleValue = $rule.find('.reasonsRuleValue'),\n            toggleFieldId = $target.val(),\n            toggleField = this.getToggleFieldById(toggleFieldId),\n            toggleFieldType = toggleField.type,\n            toggleFieldSettings = toggleField.settings,\n            ruleValueContent = '';\n\n        console.log('>>>', toggleFieldType);\n\n        switch (toggleFieldType) {\n\n            // Lightswitch - true/false\n            case 'Lightswitch':\n                ruleValueContent = Builder.templates.select([\n                    { true : Craft.t('on') },\n                    { false : Craft.t('off') }\n                ]);\n                break;\n\n            // Option based inputs\n            case 'Dropdown': case 'MultiSelect': case 'Checkboxes': case 'RadioButtons': case 'ButtonBox_Buttons': case 'ButtonBox_Colours': case 'ButtonBox_TextSize': case 'ButtonBox_Width':\n                var values = toggleFieldSettings.options,\n                    options = [],\n                    option;\n                for (var i = 0; i < values.length; ++i){\n                    option = {};\n                    option[values[i].value] = values[i].label;\n                    options.push(option);\n                }\n                ruleValueContent = Builder.templates.select(options, (toggleFieldType === 'MultiSelect' || toggleFieldType === 'Checkboxes'));\n                break;\n\n            // Number input\n            case 'Number':\n                ruleValueContent = Builder.templates.number(toggleFieldSettings);\n                break;\n\n            // Button Box – Stars\n            case 'ButtonBox_Stars':\n                var numStars = parseInt(toggleFieldSettings.numStars) + 1,\n                    option,\n                    options = [];\n                for (var i = 0; i < numStars; ++i) {\n                    option = {};\n                    option[''+i] = i;\n                    options.push(option);\n                }\n                ruleValueContent = Builder.templates.select(options);\n                break;\n\n            // Position Select\n            case 'PositionSelect':\n                var values = toggleFieldSettings.options,\n                    options = [],\n                    option;\n                for (var i = 0; i < values.length; ++i) {\n                    option = {};\n                    option[values[ i ]] = values[ i ].charAt(0).toUpperCase() + values[ i ].slice(1);\n                    options.push(option);\n                }\n                ruleValueContent = Builder.templates.select(options);\n                break;\n\n            // Relational fields\n            case 'Entries': case 'Categories': case 'Tags': case 'Assets': case 'Users': case 'Calendar_Event':\n                var options = [\n                    {\n                        'null': Craft.t('Empty').toLowerCase()\n                    },\n                    {\n                        'notnull': Craft.t('Not empty').toLowerCase()\n                    }\n                ];\n                ruleValueContent = Builder.templates.select(options);\n                break;\n\n            // Just render a plain text input for anything else\n            default :\n                ruleValueContent = Builder.templates.input(toggleFieldSettings);\n        }\n\n        $ruleValue.html(ruleValueContent);\n\n    }\n\n    onRuleCompareChange (e) {\n        e.preventDefault();\n    }\n\n    onRuleValueChange (e) {\n        e.preventDefault();\n    }\n\n    // Normally I wouldn't have this shitstorm at the end of the class, but it takes up so much space at the top LOL\n    static templates = {\n        select: function(options,isMultiSelect) {\n            var selectOptions = [],\n                option,\n                value,\n                label;\n            for (var i = 0; i < options.length; ++i) {\n                option = options[i];\n                value = Object.keys(option)[0];\n                label = option[value];\n                selectOptions.push('<option value=\"' + value + '\">' + label + '</option>');\n            }\n            return '<div class=\"' + (isMultiSelect ? 'multiselect': 'select') + '\"><select' + (isMultiSelect ? ' multiple': '') + '>' + selectOptions.join('') + '</select></div>';\n        },\n        toggleSelectOption: function(toggleField, selected) {\n            return '<option value=\"' + toggleField.id + '\" data-type=\"' + toggleField.type + '\"' + (selected ? ' selected': '') + '>' + toggleField.name + '</option>';\n        },\n        number: function(settings) {\n            return '<div class=\"input\"><input class=\"text\" type=\"number\" value=\"0\" min=\"' + settings.min + '\" max=\"' + settings.max + '\" autocomplete=\"off\"></div>';\n        },\n        input: function(settings) {\n            var input = '';\n            settings = $.extend({\n                initialRows : 4,\n                placeholder : '',\n                multiline : false\n            },settings);\n            if (settings.multiline === '1'){\n                input += '<textarea rows=\"' + settings.initialRows + '\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\"></textarea>';\n            } else {\n                input += '<input class=\"text\" type=\"text\" size=\"20\" value=\"\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\">';\n            }\n            return '<div class=\"input\">' + input + '</div>';\n        },\n        builderUi: function() {\n            return '<div class=\"reasonsBuilderUi\">' +\n                        '<div class=\"wrapper\">' +\n                            '<div class=\"heading\"><span>' + Craft.t('Show this field if') + '</span></div>' +\n                            '<div class=\"reasonsBuilder\">' +\n                                '<div class=\"reasonsStatement\">' +\n                                    '<span class=\"delimiter\">' + Craft.t('or') + '</span>' +\n                                    '<div class=\"reasonsRules\">' +\n                                        '<div class=\"reasonsRule\">' +\n                                            '<div class=\"reasonsRuleParams\">' +\n                                                '<div class=\"select reasonsRuleToggleField\"><select /></div>' +\n                                                '<div class=\"select reasonsRuleCompare\">' +\n                                                    '<select>' +\n                                                        '<option value=\"==\">' + Craft.t('is equal to') + '</option>' +\n                                                        '<option value=\"!=\">' + Craft.t('is not equal to') + '</option>' +\n                                                    '</select>' +\n                                                '</div>' +\n                                                '<div class=\"reasonsRuleValue\" />' +\n                                            '</div>' +\n                                            '<div class=\"reasonsRuleAmend\">' +\n                                                '<a class=\"delete icon reasonsRemoveRule\" title=\"' + Craft.t('Remove rule') + '\"></a>' +\n                                                '<a class=\"add icon reasonsAddRule\" title=\"' + Craft.t('and') + '\"></a>' +\n                                            '</div>' +\n                                            '<span class=\"reasonsRuleLead\">' + Craft.t('and') + '</span>' +\n                                        '</div>' +\n                                    '</div>' +\n                                '</div>' +\n                            '</div>' +\n                            '<div class=\"reasonsAdd\">' +\n                                '<a class=\"btn reasonsAddStatement\">' + Craft.t('Add rules') + '</a>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"reasonsMessage\"></div>' +\n                    '</div>';\n        }\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/Builder.js\n **/","import Builder from 'modules/Builder'\n\nexport default class BuilderModal {\n\n  static template = '<div class=\"modal elementselectormodal reasonsModal\">'+\n                      '<div class=\"body\" />'+\n                      '<div class=\"footer\">'+\n                        '<div class=\"buttons rightalign first\">'+\n                          '<div class=\"btn close submit\">Done</div>'+\n                        '</div>'+\n                      '</div>'+\n                    '</div>'\n\n  constructor (builder, settings) {\n    this.$el = $(BuilderModal.template);\n    this.$builder = builder.get().appendTo(this.$el.find('.body'));\n    this.settings = $.extend({}, settings);\n    this.modal = new Garnish.Modal(this.$el, {\n      resizable: true,\n      onHide: this.settings.onHide.bind(this)\n    });\n    this.$el.on('click', '.close', this.hide.bind(this));\n  }\n\n  hide (e) {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    this.modal.hide();\n  }\n\n  destroy () {\n    this.modal.destroy();\n    delete this.modal;\n    this.$builder.remove();\n    delete this.$builder;\n    delete this.settings;\n    delete this.$el;\n  }\n\n  onHide () {\n    if (this.settings.onHide) this.settings.onHide()\n    this.destroy();\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/BuilderModal.js\n **/","import Reasons from 'reasons'\nimport Builder from 'modules/Builder'\n\nimport { OPTION_BASED_FIELDTYPES } from 'core/settings'\n\nexport default class MatrixConfigurator {\n\n  constructor (matrixClass) {\n    \n    const fn = matrixClass.prototype;\n    const fnInit = fn.init;\n    const self = this;\n    \n    fn.init = function () {\n      fnInit.apply(this, arguments);\n      self.init(this);\n    }\n\n  }\n\n  init (configurator) {\n    \n    this.configurator = configurator;\n\n    // Init existing block types\n    for (var id in this.configurator.blockTypes) {\n      this.initBlockType(this.configurator.blockTypes[id]);\n    }\n\n  }\n\n  update () {\n\n\n\n  }\n\n  initBlockType (blockType) {\n\n    // Sneaky.\n    blockType._reasons = {\n      $input: $('<input type=\"hidden\" name=\"types[Matrix][blockTypes]['+blockType.id+'][_reasonsPlugin]\" value=\"\" />').appendTo(blockType.$item)\n    };\n    \n    // Init fields\n    for (var id in blockType.fields) {\n      this.initField(blockType.fields[id]);\n    }\n    \n    return blockType;\n\n  }\n\n  destroyBlockType () {\n\n  }\n\n  updateBlockType () {\n\n  }\n\n  onBlockTypeAdded () {\n\n  }\n\n  onBlockTypeRemoved () {\n\n  }\n\n  initField (field) {\n\n    console.log(field, field.id);\n\n    const toggleFields = this.getToggleFieldsForField(field);\n    const conditionals = this.getConditionalsForField(field);\n    \n    // Create the builder\n    const builder = new Builder({\n      fieldId: field.id,\n      toggleFields: toggleFields,\n      rules: conditionals,\n      onChange: this.onConditionalsBuilderChange.bind(field)\n    });\n\n    field.$fieldSettingsContainer.children('a.delete:last').before($('<div><hr /></div>').prepend(builder.get()));\n\n    // Again, sneaky.\n    field._reasons = {\n      builder\n    }\n\n  }\n\n  destroyField () {\n\n  }\n\n  // Whenever a field's type changes, we'll need to re-evaluate the whole block type\n\n  /*\n    Re-eval block if\n\n    - A field's type changes\n    - A field's handle changes (or, not neccessary actually)\n    - \n\n  */\n\n  onFieldTypeChange (e) {\n\n    // const $target = $(e.currentTarget);\n    // const $field = $target.closest('[data-id]');\n    // const $block = $field.parent();\n\n    // console.log('update block', $block.data('id'));\n\n  }\n\n  onFieldAdded () {\n\n  }\n\n  onFieldRemoved () {\n\n  }\n\n  onConditionalsBuilderChange () {\n    // Add/remove js-reasons-has-conditionals className for field\n    // if builder.getConditionals()\n  }\n\n  /*\n  * Convenience methods\n  *\n  */\n\n  getToggleFieldsForField (field) {\n    const toggleFieldTypes = Reasons.getToggleFieldTypes();\n    const blockType = field.blockType;\n    let toggleFields = [];\n    let siblingField;\n    for (var id in blockType.fields) {\n      siblingField = blockType.fields[id];\n      if (siblingField.id === field.id) continue;\n      if (toggleFieldTypes.indexOf(siblingField.selectedFieldType) > -1) {\n        toggleFields.push(this.getToggleFieldDataFromField(siblingField));\n      }\n    }\n    return toggleFields;\n  }\n\n  getToggleFieldDataFromField (field) {\n    const fieldType = field.selectedFieldType;\n\n    let settings = null;\n    return {\n      id: field.id,\n      handle: field.$handleInput.val(),\n      name: field.$nameInput.val(),\n      type: fieldType,\n      contentAttribute: null,\n      settings: this.getToggleFieldSettingsFromField(field)\n    };\n  }\n\n  getToggleFieldSettingsFromField (field) {\n    if (field.selectedFieldType === 'Dropdown') {\n      //console.log\n    }\n    return null;\n  }\n\n  getConditionalsForField () {\n    return null;\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/MatrixConfigurator.js\n **/","export default class FormParser {\n\n  constructor () {\n    console.log('form parser init');\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/FormParser.js\n **/","export default class MatrixParser {\n\n  constructor () {\n    console.log('matrix parser init');\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/MatrixParser.js\n **/","export const OPTION_BASED_FIELDTYPES = [\n    'Dropdown', 'MultiSelect', 'Checkboxes', 'RadioButtons', 'ButtonBox_Buttons', 'ButtonBox_Colours', 'ButtonBox_TextSize', 'ButtonBox_Width'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/settings.js\n **/"],"sourceRoot":""}